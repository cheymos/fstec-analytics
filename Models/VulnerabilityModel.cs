using System;
using System.Collections.Generic;

namespace FSTEC_Analytics.Models
{

    public class VulnerabilityModel
    {
        public List<VulnerabilityObject> ObjectList = new List<VulnerabilityObject>();
        public List<VulnerabilityFromYearsObject> ObjectListYear;

        public int Count => ObjectList.Count;

        // Уровни опасности --
        public int Critical { get; private set; }
        public int High { get; private set; }
        public int Middle { get; private set; }
        public int Low { get; private set; }

        // Уровни опасности //

        public VulnerabilityObject GetItem(int index)
        {
            return ObjectList[index];
        }

        public void AddItem(VulnerabilityObject item)
        {
            ObjectList.Add(item);
        }

        public void AddItemYear(VulnerabilityFromYearsObject item)
        {
            ObjectListYear.Add(item);
        }

        public void DeleteItem(string id)
        {
            for (int i = 0; i < ObjectList.Count; i++)
            {
                if (ObjectList[i].ID == id)
                    ObjectList.Remove(ObjectList[i]);
            }
        }
        public void DeleteItem(VulnerabilityObject item)
        {
            ObjectList.Remove(item);
        }

        public VulnerabilityModel Report(DateTime start, DateTime end)
        {
            VulnerabilityModel outputData = new VulnerabilityModel();

            Initial(start, end);

            Critical = 0;
            High = 0;
            Middle = 0;
            Low = 0;

            for (int i = 0; i < ObjectList.Count; i++)
            {
                if (ObjectList[i].Date >= start && ObjectList[i].Date <= end)
                {
                    outputData.AddItem(ObjectList[i]);

                    for (int z = 0; z < ObjectListYear.Count; z++)
                    {
                        if (ObjectListYear[z].Year == ObjectList[i].Date.Year)
                        {
                            ObjectListYear[z].Count++;
                        }
                    }
                    if (ObjectList[i].DangerLevel.Contains("Критический уровень опасности"))
                    {
                        Critical++;
                    }
                    else if (ObjectList[i].DangerLevel.Contains("Высокий уровень опасности"))
                    {
                        High++;
                    }
                    else if (ObjectList[i].DangerLevel.Contains("Средний уровень опасности"))
                    {
                        Middle++;
                    }
                    else if (ObjectList[i].DangerLevel.Contains("Низкий уровень опасности"))
                    {
                        Low++;
                    }
                }
            }

            return outputData;
        }
        public void Initial(DateTime start, DateTime end)
        {
            var countIteration = end.Year - start.Year;
            ObjectListYear = new List<VulnerabilityFromYearsObject>(countIteration);
            VulnerabilityFromYearsObject item1 = new VulnerabilityFromYearsObject();
            item1.Year = start.Year;
            AddItemYear(item1);
            try
            {
                for (int i = 1; i < countIteration; i++)
                {
                    VulnerabilityFromYearsObject item = new VulnerabilityFromYearsObject();
                    item.Year = (ObjectListYear[i - 1].Year) + 1;
                    AddItemYear(item);
                }

            }
            catch (Exception)
            {
                throw;
            }
        }
    }


    public class VulnerabilityObject
    {
        public string ID;
        public string Title;
        public string Description;
        public string VendorPO;
        public string NamePO;
        public string VersionPO;
        public string TypePO;
        public string OS;
        public string Class;
        public DateTime Date;
        public string CVSS2;
        public string CVSS3;
        public string DangerLevel;
        public string PossibleCorrective;
        public string Status;
        public string Exploit;
        public string Information;
        public string URL;
        public string OtherIdentifiers;
        public string Etc;
    }

    public class VulnerabilityFromYearsObject
    {
        public int Year;
        public int Count;
    }
}
